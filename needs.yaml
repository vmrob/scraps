{% set common_cxx_flags = env['CXXFLAGS'] ~ ' -fvisibility=hidden' %}
{% set xcrun_platforms = {'ios': 'iphoneos', 'tvos': 'appletvos', 'iossimulator': 'iphoneossimulator', 'tvossimulator': 'appletvossimulator'} %}

libraries:
    asio:
        repository: https://github.com/chriskohlhoff/asio.git
        commit: asio-1-10-6
        project:
            header-directory: asio/include
            post-build: xxd -i asio/LICENSE_1_0.txt {build_directory}/include/asio/license.c
    boost-build:
        download: https://github.com/boostorg/build/archive/2016.03.tar.gz
        checksum: 0e6936337c25fc87d2aff8ea6c63019e9c1e319a
        project:
            build-steps:
                - ./bootstrap.sh
                - ./b2 install --prefix={build_directory}
    libsodium:
        download: https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz
        checksum: 60f3f3a3f4aea38a103d25844a9e181c0f7b4505
        project:
            configure-args:
                - --enable-minimal
                - --disable-soname-versions
                - --disable-shared
            {% if (platform == 'ios' or platform == 'tvos') and 'arm' in architecture %}
                - --host=arm-apple-darwin10
            {% endif %}
            {% if platform == 'android' and architecture == 'armv7' %}
            environment:
                CFLAGS: "{current} -mfloat-abi=softfp -mfpu=vfpv3-d16 -mthumb -marm"
            {% endif %}
            post-build: xxd -i LICENSE {build_directory}/include/sodium/license.c
    mbedtls:
        download: https://tls.mbed.org/download/mbedtls-2.4.0-apache.tgz
        checksum: 20fe40f9f831ca63839967178e3db5aaf77705d3
        project:
            build-steps: make -j{build_concurrency} install APPS= DESTDIR={build_directory}
            post-build: xxd -i LICENSE {build_directory}/include/mbedtls/license.c
    curl:
        download: https://curl.haxx.se/download/curl-7.50.3.tar.gz
        checksum: be0065afc76a3d8568f5f78d8efddadb6310f9d7
        dependencies: mbedtls
        project:
            {% if platform in ['ios', 'iossimulator', 'tvos', 'tvossimulator', 'osx'] %}
            environment:
                # Workaround for earlier versions of Xcode platforms. See https://curl.haxx.se/mail/lib-2016-09/0051.html
                CFLAGS: -Werror=partial-availability
                CXXFLAGS: -Werror=partial-availability
            {% endif %}
            configure-args:
                - --disable-ldap
                - --without-libidn
                - --without-librtmp
                - --disable-ntlm-wb
                - --disable-shared
                - --with-mbedtls={{ build_directory('mbedtls') }}
                - --enable-optimize
                - --disable-dependency-tracking
                - --disable-imap
                - --disable-smtp
                - --disable-pop3
                - --disable-telnet
                - --disable-rtsp
                - --disable-ldap
                - --disable-ldaps
                - --disable-proxy
                - --disable-smb
                - --disable-gopher
            post-build: xxd -i COPYING {build_directory}/include/curl/license.c
    gsl:
        repository: https://github.com/Microsoft/GSL.git
        commit: 0be53d99ef9b6ac0c7d6d995cb94c0dce14fe1f8
        project:
            header-directory: include
            post-build: xxd -i LICENSE {build_directory}/include/gsl_license.c
    mnmlstc:
        repository: https://github.com/mnmlstc/core.git
        commit: d6134a825d182baee96478cad96f2d3754d21cfe
        project:
            header-directory: include
            post-build: xxd -i License.rst {build_directory}/include/core/license.c
    fmtlib:
        repository: https://github.com/fmtlib/fmt.git
        commit: 3.0.0
        project:
            build-steps:
                - mkdir -p {build_directory}/include/fmt
                - cp fmt/*.h {build_directory}/include/fmt
                - cp fmt/*.cc {build_directory}/include/fmt
                - $CXX -std=c++11 {{common_cxx_flags}} -c fmt/format.cc -I . -o fmt/format.o
                - ar -rv {build_directory}/lib/libfmt.a fmt/format.o
            post-build: xxd -i LICENSE.rst {build_directory}/include/fmt/license.c
    googletest:
        repository: https://github.com/google/googletest.git
        commit: 43359642a1c16ad3f4fc575c7edd0cb935810815
        project:
            build-steps:
                - cp -R googletest/include {build_directory}
                - $CXX -std=c++11 {{common_cxx_flags}} -c googletest/src/gtest-all.cc -isystem googletest/include -I googletest -o googletest/src/gtest-all.o
                - ar -rv {build_directory}/lib/libgtest.a googletest/src/gtest-all.o
    benchmark:
        repository: https://github.com/google/benchmark.git
        commit: 577baa0dbdc6ea6d916db0f12ed2dcc5cee19b99
        project:
            environment:
                CXXFLAGS: {{common_cxx_flags}}
            cmake-options:
                CMAKE_BUILD_TYPE: Release
    jshackle:
        repository: https://github.com/bittorrent/jshackle.git
        commit: fa34cb3f85d9358bb93ab747dbd7105e97fc4216
        project:
            header-directory: include
    json11:
        repository: https://github.com/dropbox/json11.git
        commit: a20878aaa5bd2546466585b18b6d09808a98233d
        project:
            build-steps:
                - cp json11.hpp {build_directory}/include
                - $CXX -std=c++11 {{ '-stdlib=libc++' if platform != 'android' }} -c json11.cpp -I . -o json11.o
                - ar -rv {build_directory}/lib/libjson11.a json11.o
            post-build:
                - mkdir -p {build_directory}/include/json11
                - xxd -i LICENSE.txt {build_directory}/include/json11/license.c
